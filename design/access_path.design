== DESIGN:  access path scannerlib init ==

each access path has a cascading configuration system

consider a root access path
it corresponds to ino 1 of the mounted file system
the mounted file system exists in the context of the host
somewhere predictable on that host
is the proto cascading configuration

the root access path inherits from the proto configuration

the domain of any given access path can only be parsed with
the configuration provided by the access path's parent.

	the parent configuration produces the domain map


ACCESS PATH SYNC


--------


access path design.

objects:

access path {
    file system {
	string cache,
	rql {
	    process,
	    payload
	}
    }
    branch table,
    domain packet,
    cosm {
	types
    }
}

access path :
   file system :
      string cache,
      rql :
         process,
	 payload
	 ;
      ;
   branch table,
   domain packet,
   cosm :
      types
      ;
   ;








access path :=
   file system,
   branch table,
   domain packet,
   cosm
   ;

file system :=
   string cache
   rql
   ;

rql :=
   process,
   payload
   ;

cosm :=
   types
   ;


functions:


access path, serialno --> branch lookup --> access path id

branch lookup () :

    serialno --> access path { branch table } --> access path id | 0
    { 
	0 ?
	{
	    serialno --> string cache --> string
	    string, access path --> rql --> access path id
	    access path id, serialno --> branch table --> access path id
	}
    }
;

branch table ()
{
    serialno ...;
    access path id, serialno ...;
}
